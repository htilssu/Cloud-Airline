""""Create_initial_database_schema"

Revision ID: 1b1d77edd6d3
Revises: 
Create Date: 2025-07-04 12:20:30.314777

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1b1d77edd6d3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('airports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_airports_code'), 'airports', ['code'], unique=True)
    op.create_index(op.f('ix_airports_id'), 'airports', ['id'], unique=False)
    op.create_table('planes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('total_seats', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_planes_code'), 'planes', ['code'], unique=True)
    op.create_index(op.f('ix_planes_id'), 'planes', ['id'], unique=False)
    op.create_table('ticket_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price_multiplier', sa.Float(), nullable=False),
    sa.Column('base_baggage_allowance_kg', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_ticket_types_id'), 'ticket_types', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('bookings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_time', sa.DateTime(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', name='bookingstatus'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bookings_id'), 'bookings', ['id'], unique=False)
    op.create_table('flights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('flight_number', sa.String(), nullable=False),
    sa.Column('departure_time', sa.DateTime(), nullable=False),
    sa.Column('arrival_time', sa.DateTime(), nullable=False),
    sa.Column('base_price', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'ON_TIME', 'DELAYED', 'CANCELLED', 'COMPLETED', name='flightstatus'), nullable=False),
    sa.Column('plane_id', sa.Integer(), nullable=False),
    sa.Column('departure_airport_id', sa.Integer(), nullable=False),
    sa.Column('arrival_airport_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['arrival_airport_id'], ['airports.id'], ),
    sa.ForeignKeyConstraint(['departure_airport_id'], ['airports.id'], ),
    sa.ForeignKeyConstraint(['plane_id'], ['planes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flights_flight_number'), 'flights', ['flight_number'], unique=True)
    op.create_index(op.f('ix_flights_id'), 'flights', ['id'], unique=False)
    op.create_table('tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('passenger_name', sa.String(), nullable=False),
    sa.Column('seat_number', sa.String(), nullable=True),
    sa.Column('extra_baggage_kg', sa.Integer(), nullable=True),
    sa.Column('final_price', sa.Float(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.Column('ticket_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['flight_id'], ['flights.id'], ),
    sa.ForeignKeyConstraint(['ticket_type_id'], ['ticket_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tickets_id'), 'tickets', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tickets_id'), table_name='tickets')
    op.drop_table('tickets')
    op.drop_index(op.f('ix_flights_id'), table_name='flights')
    op.drop_index(op.f('ix_flights_flight_number'), table_name='flights')
    op.drop_table('flights')
    op.drop_index(op.f('ix_bookings_id'), table_name='bookings')
    op.drop_table('bookings')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_ticket_types_id'), table_name='ticket_types')
    op.drop_table('ticket_types')
    op.drop_index(op.f('ix_planes_id'), table_name='planes')
    op.drop_index(op.f('ix_planes_code'), table_name='planes')
    op.drop_table('planes')
    op.drop_index(op.f('ix_airports_id'), table_name='airports')
    op.drop_index(op.f('ix_airports_code'), table_name='airports')
    op.drop_table('airports')
    # ### end Alembic commands ###
